---
- name: Delete container and user details from target node
  hosts: all

  vars_files:
    - config.ansible.yml

  tasks:
    # TODO: Get this list from config.ansible.yml or $username.ansible.yml instead of hardcoding
    - name: Remove opened firewall ports
      become: true
      become_user: root
      ansible.posix.firewalld:
        service: "{{ item }}"
        immediate: true
        permanent: true
        state: disabled
      loop:
        - deluge-web
        - deluge-daemon
        - deluge-thin-client-gtk

    - name: Remove data dir group
      become: true
      become_user: root
      ansible.builtin.group:
        name: data
        state: absent

    - name: Disallow container to use host devices (viz. gluetun)
      become: true
      become_user: root
      ansible.posix.seboolean:
        name: container_use_devices
        state: false
        persistent: true

    - name: Disallow container to load host kernel modules (viz. gluetun)
      become: true
      become_user: root
      ansible.posix.seboolean:
        name: domain_kernel_load_modules
        state: false
        persistent: true

    - name: Disable linger on user so I can kill them safely
      become: true
      become_user: root
      loop: "{{ secret_files_by_username | map(attribute='username') }}"
      loop_control:
        loop_var: username
      register: disable_linger_result
      failed_when:
        - "'Failed to look up user' not in disable_linger_result.stderr"
        - disable_linger_result.rc != 0
      ansible.builtin.command:
        cmd: "loginctl disable-linger {{ username }}"
        removes: "/home/{{ username }}"

    - name: Kill active user sessions
      become: true
      become_user: root
      loop: "{{ secret_files_by_username | map(attribute='username') }}"
      loop_control:
        loop_var: username
      register: kill_user_result
      failed_when:
        - "'Failed to look up user' not in kill_user_result.stderr"
        - "'is not logged in or lingering' not in kill_user_result.stderr"
        - kill_user_result.rc != 0
      ansible.builtin.command:
        cmd: "loginctl kill-user {{ username }}"
        removes: "/home/{{ username }}"

    - name: Remove all users
      become: true
      become_user: root
      loop: "{{ secret_files_by_username | map(attribute='username') }}"
      loop_control:
        loop_var: username
      ansible.builtin.user:
        name: "{{ username }}"
        state: absent
        remove: true

    - name: "Reset selinux details on {{ data_dir }}"
      become: true
      become_user: root
      ansible.builtin.file:
        path: "{{ data_dir }}"
        setype: default_t
        recurse: true
        follow: false
