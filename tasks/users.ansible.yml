---

- name: "Create user {{ username }}"
  become: true
  become_user: root
  ansible.builtin.user:
    name: "{{ username }}"
    state: present
    umask: '077'

- name: "Copy any secrets to new user named {{ username }}"
  become: true
  become_user: "{{ username }}"
  ansible.builtin.copy:
    dest: "/home/{{ username }}/secrets/"
    mode: '400'
    src: secrets/{{ username }}/
    group: "{{ username }}"
    owner: "{{ username }}"

- name: "Set user to linger on login {{ username }}"
  become: true
  become_user: root
  changed_when: true
  ansible.builtin.command:
    cmd: "loginctl enable-linger {{ username }} --no-ask-password --no-pager"

- name: "Copy over unit files for user {{ username }}"
  become: true
  become_user: "{{ username }}"
  ansible.builtin.copy:
    src: "units/{{ username }}"
    dest: "/home/{{ username }}/.config/systemd/user/"
    group: "{{ username }}"
    owner: "{{ username }}"
    mode: '600'

- name: "Arrange quadlets, config, container specific permissions, etc for {{ username }}"
  ansible.builtin.include_tasks: "{{ username }}.ansible.yml"

- name: "Activate systemd timer units for {{ username }}"
  become: true
  become_user: "{{ username }}"
  with_fileglob: "units/{{ username }}/*"
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: "{{ 'started' if (item.endswith('.timer')) else 'reloaded' }}"
    enabled: true
    scope: user
    daemon_reload: true

# TODO: Ensure user started now and check that login is a success, container is up and stays up, etc
# If the container/user started earlier and stuff like file perms/selinux weren't yet set, we'll have issues
