---
# Note: For some reason u=rX on some mode args would result in files created with u=g=o=rX
# UMASK seems like it's not the issue, and I dislike the 0765 syntax for file modes, so I use o-rwx
# syntax explicitly to clear other file perms.

- name: "Create user {{ username }}"
  become: true
  become_user: root
# ansible.builtin.user would be better but that module does not support -F/--add-subids-for-system
  ansible.builtin.command:
    creates: "/home/{{ username }}" # This works as long as we use standard home paths
    cmd: "useradd --create-home --system --add-subids-for-system --user-group --key UMASK=077 {{ username }}"

- name: Copy over quadlets
  # Become required here for stat-ing dest before startup to see if file has changed
  # My personal user, running this playbook, does not have those permissions by default
  become: true
  become_user: root
  environment:
    # This is set scoped to this task just for the validate block to work
    QUADLET_UNIT_DIRS: "/home/{{ username }}/.config/containers/systemd/"
  ansible.builtin.copy:
    dest: "/home/{{ username }}/.config/containers/systemd/"
    # TODO: Do I need X or x or w here for perms?
    mode: u=rX,g=rX,o-rwx
    src: "files/{{ username }}/"
    group: "{{ username }}"
    owner: "{{ username }}"
    validate: /usr/lib/systemd/system-generators/podman-system-generator --user --dryrun %s

- name: Generate target dir for secrets
  become: true
  become_user: "{{ username }}"
  no_log: true
  ansible.builtin.file:
    state: directory
    path: "/home/{{ username }}/secrets"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: u=rwX,g-rwx,o-rwx

- name: Copy any secret files, target paths and names specified in config.ansible.yml
  become: true
  become_user: root
  no_log: true
  ansible.builtin.copy:
    dest: "/home/{{ username }}/{{ item.1 }}"
    mode: u=rwX,g-rxw,o-rwx
    src: "{{ item.1 }}"
    group: "{{ username }}"
    owner: "{{ username }}"
  with_subelements:
    - "{{ secret_files_by_username }}"
    - secret_files
    - {'skip_missing': true}
  when: "username in item.0.username"

- name: "Set {{ username }} user to linger on login"
  become: true
  become_user: root
  ansible.builtin.command: "loginctl enable-linger {{ username }} --no-ask-password --no-pager"

# TODO: Ensure user started now and check that login is a success, container is up and stays up, etc
# If the container/user started earlier and stuff like file perms/selinux weren't yet set, we'll have issues
